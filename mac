#!/bin/sh

# Welcome to the thoughtbot laptop script!
# Be prepared to turn your laptop (or desktop, no haters here)
# into an awesome development machine.

fancy_echo() {
  local fmt="$1"; shift

  # shellcheck disable=SC2059
  printf "\n$fmt\n" "$@"
}

trap 'ret=$?; test $ret -ne 0 && printf "failed\n\n" >&2; exit $ret' EXIT

set -e

case "$SHELL" in
  */zsh) : ;;
  *)
    fancy_echo "Changing your shell to zsh ..."
      chsh -s "$(which zsh)"
    ;;
esac

brew_install_or_upgrade() {
  if brew_is_installed "$1"; then
    if brew_is_upgradable "$1"; then
      fancy_echo "Upgrading %s ..." "$1"
      brew upgrade "$@"
    else
      fancy_echo "Already using the latest version of %s. Skipping ..." "$1"
    fi
  else
    fancy_echo "Installing %s ..." "$1"
    brew install "$@"
  fi
}

brew_is_installed() {
  local name="$(brew_expand_alias "$1")"

  brew list -1 | grep -Fqx "$name"
}

brew_is_upgradable() {
  local name="$(brew_expand_alias "$1")"

  ! brew outdated --quiet "$name" >/dev/null
}

brew_tap() {
  brew tap "$1" 2> /dev/null
}

brew_expand_alias() {
  brew info "$1" 2>/dev/null | head -1 | awk '{gsub(/:/, ""); print $1}'
}

gem_install_or_update() {
  if gem list "$1" --installed > /dev/null; then
    fancy_echo "Updating %s ..." "$1"
    gem update "$@"
  else
    fancy_echo "Installing %s ..." "$1"
    gem install "$@"
    rbenv rehash
  fi
}

if ! command -v brew >/dev/null; then
  fancy_echo "Installing Homebrew ..."
    curl -fsS \
      'https://raw.githubusercontent.com/Homebrew/install/master/install' | ruby

    export PATH="/usr/local/bin:$PATH"
else
  fancy_echo "Homebrew already installed. Skipping ..."
fi

fancy_echo "Updating Homebrew formulas ..."
brew update

# Git
brew_install_or_upgrade 'git'
brew_install_or_upgrade 'git-flow'
brew_install_or_upgrade 'hub'

# Ag
brew_install_or_upgrade 'the_silver_searcher'

# SVN
brew_install_or_upgrade 'subversion'

# NVM
node_version="0.10"

brew_install_or_upgrade 'nvm'
nvm install "$node_version"

fancy_echo "Setting $node_version as the global default nodejs..."
nvm alias default "$node_version"

# Neovim
brew_tap 'neovim/homebrew-neovim'
fancy_echo "Installing neovim ..."
brew install --HEAD neovim

# CTags
brew_install_or_upgrade 'ctags'

# Tmux
brew_install_or_upgrade 'tmux'

# Figure that shit out
brew_install_or_upgrade 'reattach-to-user-namespace'
brew_install_or_upgrade 'imagemagick'
brew_install_or_upgrade 'tree'
brew_install_or_upgrade 'ssh-copy-id'
brew_install_or_upgrade 'libyaml'
brew_install_or_upgrade 'httpie'
brew_install_or_upgrade 'battery'
brew_install_or_upgrade 'ctags'

# Tmate
brew_tap 'nviennot/tmate'
brew_install_or_upgrade 'tmate'

# Ruby Env
if [ ! -d "$HOME/.rbenv" ]; then
  brew_install_or_upgrade 'rbenv'
  brew_install_or_upgrade 'ruby-build'
fi

# Upgrade OpenSSL
brew_install_or_upgrade 'openssl'
brew unlink openssl && brew link openssl --force

ruby_version="$(curl -sSL http://ruby.thoughtbot.com/latest)"

eval "$(rbenv init - zsh)"

if ! rbenv versions | grep -Fq "$ruby_version"; then
  rbenv install -s "$ruby_version"
fi

rbenv global "$ruby_version"
rbenv shell "$ruby_version"

gem update --system

gem_install_or_update 'bundler'

fancy_echo "Configuring Bundler ..."
  number_of_cores=$(sysctl -n hw.ncpu)
  bundle config --global jobs $((number_of_cores - 1))

brew_install_or_upgrade 'heroku-toolbelt'

if ! command -v rcup >/dev/null; then
  brew_tap 'thoughtbot/formulae'
  brew_install_or_upgrade 'rcm'
fi

git clone "https://github.com/philplckthun/dotfiles.git" "$HOME/dotfiles"
DOTFILES_DIRS="~/dotfiles"
fancy_echo "Configuring dotfiles ..."
rcup

# Install brew cask and install program via brew cask
brew_cask_expand_alias() {
  brew cask info "$1" 2>/dev/null | head -1 | awk '{gsub(/:/, ""); print $1}'
}

brew_cask_is_installed() {
  local NAME=$(brew_cask_expand_alias "$1")
  brew cask list -1 | grep -Fqx "$NAME"
}

brew_cask_install() {
  if ! brew_cask_is_installed "$1"; then
    brew cask install "$@"
  fi
}

brew_cask_install_or_upgrade() {
  if brew_cask_is_installed "$1"; then
    echo "$1 is already installed, brew cask upgrade is not yet implemented"
  else
    brew cask install "$@"
  fi
}

brew tap 'caskroom/cask'
brew_install_or_upgrade 'brew-cask'

brew_cask_install 'java'
brew_cask_install 'google-chrome'
brew_cask_install 'spotify'
brew_cask_install 'slack'
brew_cask_install 'skype'
brew_cask_install 'transmission'
brew_cask_install 'kitematic'

brew tap 'caskroom/versions'

brew_cask_install 'iterm2-nightly'

if [ -f "$HOME/.laptop.local" ]; then
  . "$HOME/.laptop.local"
fi
